

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Apr 07 21:24:44 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0006                     _PORTB	set	6
   217  0009                     _PORTE	set	9
   218  0005                     _PORTA	set	5
   219  000B                     _INTCON	set	11
   220  000B                     _INTCONbits	set	11
   221  0001                     _TMR0	set	1
   222  0006                     _PORTBbits	set	6
   223  0008                     _PORTD	set	8
   224  0007                     _PORTC	set	7
   225  005A                     _T0IF	set	90
   226  0058                     _RBIF	set	88
   227  008F                     _OSCCONbits	set	143
   228  0086                     _TRISB	set	134
   229  0089                     _TRISE	set	137
   230  0088                     _TRISD	set	136
   231  0087                     _TRISC	set	135
   232  0085                     _TRISA	set	133
   233  0096                     _IOCB	set	150
   234  0081                     _OPTION_REGbits	set	129
   235  0189                     _ANSELH	set	393
   236  0188                     _ANSEL	set	392
   237                           
   238                           	psect	cinit
   239  0011                     start_initialization:	
   240                           ; #config settings
   241                           
   242  0011                     __initialization:
   243                           
   244                           ; Clear objects allocated to COMMON
   245  0011  01F9               	clrf	__pbssCOMMON& (0+127)
   246  0012  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK0
   249  0013  1283               	bcf	3,5	;RP0=0, select bank0
   250  0014  1303               	bcf	3,6	;RP1=0, select bank0
   251  0015  01B0               	clrf	__pbssBANK0& (0+127)
   252  0016  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   253  0017  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   254  0018  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   255  0019                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  0019                     __end_of__initialization:
   259  0019  0183               	clrf	3
   260  001A  120A  118A  29C3   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  0079                     __pbssCOMMON:
   264  0079                     _selector:
   265  0079                     	ds	1
   266  007A                     _cod:
   267  007A                     	ds	1
   268                           
   269                           	psect	bssBANK0
   270  0030                     __pbssBANK0:
   271  0030                     _contador:
   272  0030                     	ds	1
   273  0031                     _vector:
   274  0031                     	ds	3
   275                           
   276                           	psect	cstackCOMMON
   277  0070                     __pcstackCOMMON:
   278  0070                     ?_codificar_7seg:
   279  0070                     ??_codificar_7seg:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_multiplexado:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_isr:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_timer0:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_setup_int:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_setup:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_clk:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303                           
   304                           ; 1 bytes @ 0x0
   305  0070                     	ds	2
   306  0072                     codificar_7seg@valor:
   307                           
   308                           ; 1 bytes @ 0x2
   309  0072                     	ds	1
   310  0073                     ??_multiplexado:
   311                           
   312                           ; 1 bytes @ 0x3
   313  0073                     	ds	2
   314  0075                     ??_isr:
   315                           
   316                           ; 1 bytes @ 0x5
   317  0075                     	ds	4
   318                           
   319                           	psect	cstackBANK0
   320  0020                     __pcstackBANK0:
   321  0020                     ??_timer0:
   322  0020                     ??_setup_int:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0020                     ??_setup:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0020                     ??_clk:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0020                     ?___bmul:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0020                     ?___awdiv:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0020                     ___bmul@multiplicand:	
   338                           ; 2 bytes @ 0x0
   339                           
   340  0020                     ___awdiv@divisor:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 2 bytes @ 0x0
   345  0020                     	ds	1
   346  0021                     ??___bmul:
   347                           
   348                           ; 1 bytes @ 0x1
   349  0021                     	ds	1
   350  0022                     ___bmul@product:
   351  0022                     ___awdiv@dividend:	
   352                           ; 1 bytes @ 0x2
   353                           
   354                           
   355                           ; 2 bytes @ 0x2
   356  0022                     	ds	1
   357  0023                     ___bmul@multiplier:
   358                           
   359                           ; 1 bytes @ 0x3
   360  0023                     	ds	1
   361  0024                     ??___awdiv:
   362                           
   363                           ; 1 bytes @ 0x4
   364  0024                     	ds	1
   365  0025                     ___awdiv@counter:
   366                           
   367                           ; 1 bytes @ 0x5
   368  0025                     	ds	1
   369  0026                     ___awdiv@sign:
   370                           
   371                           ; 1 bytes @ 0x6
   372  0026                     	ds	1
   373  0027                     ___awdiv@quotient:
   374                           
   375                           ; 2 bytes @ 0x7
   376  0027                     	ds	2
   377  0029                     ?_separar:
   378  0029                     separar@vector:	
   379                           ; 1 bytes @ 0x9
   380                           
   381                           
   382                           ; 1 bytes @ 0x9
   383  0029                     	ds	1
   384  002A                     ??_separar:
   385                           
   386                           ; 1 bytes @ 0xA
   387  002A                     	ds	3
   388  002D                     separar@valor:
   389                           
   390                           ; 1 bytes @ 0xD
   391  002D                     	ds	1
   392  002E                     separar@temp:
   393                           
   394                           ; 1 bytes @ 0xE
   395  002E                     	ds	1
   396  002F                     ??_main:
   397                           
   398                           ; 1 bytes @ 0xF
   399  002F                     	ds	1
   400                           
   401                           	psect	maintext
   402  01C3                     __pmaintext:	
   403 ;;
   404 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   405 ;;
   406 ;; *************** function _main *****************
   407 ;; Defined at:
   408 ;;		line 190 in file "main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : B00/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          0       1       0       0       0
   425 ;;      Totals:         0       1       0       0       0
   426 ;;Total ram usage:        1 bytes
   427 ;; Hardware stack levels required when called: 5
   428 ;; This function calls:
   429 ;;		_clk
   430 ;;		_separar
   431 ;;		_setup
   432 ;;		_setup_int
   433 ;;		_timer0
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439  01C3                     _main:	
   440                           ;psect for function _main
   441                           
   442  01C3                     l1122:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;main.c: 192:     setup();
   448  01C3  120A  118A  2202  120A  118A  	fcall	_setup
   449                           
   450                           ;main.c: 193:     setup_int();
   451  01C8  120A  118A  222C  120A  118A  	fcall	_setup_int
   452                           
   453                           ;main.c: 194:     clk();
   454  01CD  120A  118A  2224  120A  118A  	fcall	_clk
   455                           
   456                           ;main.c: 195:     timer0();
   457  01D2  120A  118A  2217  120A  118A  	fcall	_timer0
   458  01D7                     l1124:
   459                           
   460                           ;main.c: 197:         separar(contador, vector);
   461  01D7  3031               	movlw	(low (_vector| 0))& (0+255)
   462  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   463  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   464  01DA  00AF               	movwf	??_main
   465  01DB  082F               	movf	??_main,w
   466  01DC  00A9               	movwf	separar@vector
   467  01DD  0830               	movf	_contador,w
   468  01DE  120A  118A  2086  120A  118A  	fcall	_separar
   469  01E3                     l1126:
   470                           
   471                           ;main.c: 198:         PORTA = contador;
   472  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   473  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   474  01E5  0830               	movf	_contador,w
   475  01E6  0085               	movwf	5	;volatile
   476  01E7  29D7               	goto	l1124
   477  01E8  120A  118A  280E   	ljmp	start
   478  01EB                     __end_of_main:
   479                           
   480                           	psect	text1
   481  0217                     __ptext1:	
   482 ;; *************** function _timer0 *****************
   483 ;; Defined at:
   484 ;;		line 134 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512  0217                     _timer0:	
   513                           ;psect for function _timer0
   514                           
   515  0217                     l1054:	
   516                           ;incstack = 0
   517                           ; Regs used in _timer0: [wreg]
   518                           
   519                           
   520                           ;main.c: 137:     OPTION_REGbits.T0CS = 0;
   521  0217  1683               	bsf	3,5	;RP0=1, select bank1
   522  0218  1303               	bcf	3,6	;RP1=0, select bank1
   523  0219  1281               	bcf	1,5	;volatile
   524                           
   525                           ;main.c: 138:     OPTION_REGbits.PSA = 0;
   526  021A  1181               	bcf	1,3	;volatile
   527                           
   528                           ;main.c: 139:     OPTION_REGbits.PS2 = 1;
   529  021B  1501               	bsf	1,2	;volatile
   530                           
   531                           ;main.c: 140:     OPTION_REGbits.PS1 = 1;
   532  021C  1481               	bsf	1,1	;volatile
   533                           
   534                           ;main.c: 141:     OPTION_REGbits.PS0 = 1;
   535  021D  1401               	bsf	1,0	;volatile
   536                           
   537                           ;main.c: 142:     INTCONbits.T0IF = 0;
   538  021E  110B               	bcf	11,2	;volatile
   539  021F                     l1056:
   540                           
   541                           ;main.c: 143:     TMR0 = 236;
   542  021F  30EC               	movlw	236
   543  0220  1283               	bcf	3,5	;RP0=0, select bank0
   544  0221  1303               	bcf	3,6	;RP1=0, select bank0
   545  0222  0081               	movwf	1	;volatile
   546  0223                     l92:
   547  0223  0008               	return
   548  0224                     __end_of_timer0:
   549                           
   550                           	psect	text2
   551  022C                     __ptext2:	
   552 ;; *************** function _setup_int *****************
   553 ;; Defined at:
   554 ;;		line 147 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 3
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582  022C                     _setup_int:	
   583                           ;psect for function _setup_int
   584                           
   585  022C                     l1060:	
   586                           ;incstack = 0
   587                           ; Regs used in _setup_int: [wreg]
   588                           
   589                           
   590                           ;main.c: 148:     INTCON = 0b10101000;
   591  022C  30A8               	movlw	168
   592  022D  008B               	movwf	11	;volatile
   593                           
   594                           ;main.c: 149:     IOCB = 0b00000011;
   595  022E  3003               	movlw	3
   596  022F  1683               	bsf	3,5	;RP0=1, select bank1
   597  0230  1303               	bcf	3,6	;RP1=0, select bank1
   598  0231  0096               	movwf	22	;volatile
   599  0232                     l95:
   600  0232  0008               	return
   601  0233                     __end_of_setup_int:
   602                           
   603                           	psect	text3
   604  0202                     __ptext3:	
   605 ;; *************** function _setup *****************
   606 ;; Defined at:
   607 ;;		line 153 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; Hardware stack levels required when called: 3
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635  0202                     _setup:	
   636                           ;psect for function _setup
   637                           
   638  0202                     l1064:	
   639                           ;incstack = 0
   640                           ; Regs used in _setup: [wreg+status,2]
   641                           
   642                           
   643                           ;main.c: 154:     ANSEL = 0;
   644  0202  1683               	bsf	3,5	;RP0=1, select bank3
   645  0203  1703               	bsf	3,6	;RP1=1, select bank3
   646  0204  0188               	clrf	8	;volatile
   647                           
   648                           ;main.c: 155:     ANSELH = 0;
   649  0205  0189               	clrf	9	;volatile
   650                           
   651                           ;main.c: 157:     TRISA = 0;
   652  0206  1683               	bsf	3,5	;RP0=1, select bank1
   653  0207  1303               	bcf	3,6	;RP1=0, select bank1
   654  0208  0185               	clrf	5	;volatile
   655                           
   656                           ;main.c: 158:     TRISC = 0;
   657  0209  0187               	clrf	7	;volatile
   658                           
   659                           ;main.c: 159:     TRISD = 0;
   660  020A  0188               	clrf	8	;volatile
   661                           
   662                           ;main.c: 160:     TRISE = 0;
   663  020B  0189               	clrf	9	;volatile
   664  020C                     l1066:
   665                           
   666                           ;main.c: 161:     TRISB = 0b00000011;
   667  020C  3003               	movlw	3
   668  020D  0086               	movwf	6	;volatile
   669  020E                     l1068:
   670                           
   671                           ;main.c: 163:     PORTA = 0;
   672  020E  1283               	bcf	3,5	;RP0=0, select bank0
   673  020F  1303               	bcf	3,6	;RP1=0, select bank0
   674  0210  0185               	clrf	5	;volatile
   675  0211                     l1070:
   676                           
   677                           ;main.c: 164:     PORTC = 0;
   678  0211  0187               	clrf	7	;volatile
   679  0212                     l1072:
   680                           
   681                           ;main.c: 165:     PORTE = 0;
   682  0212  0189               	clrf	9	;volatile
   683                           
   684                           ;main.c: 166:     PORTD = 0b00000001;
   685  0213  3001               	movlw	1
   686  0214  0088               	movwf	8	;volatile
   687  0215                     l1074:
   688                           
   689                           ;main.c: 167:     PORTB = 0;
   690  0215  0186               	clrf	6	;volatile
   691  0216                     l98:
   692  0216  0008               	return
   693  0217                     __end_of_setup:
   694                           
   695                           	psect	text4
   696  0086                     __ptext4:	
   697 ;; *************** function _separar *****************
   698 ;; Defined at:
   699 ;;		line 177 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  valor           1    wreg     unsigned char 
   702 ;;  vector          1    9[BANK0 ] PTR unsigned char 
   703 ;;		 -> vector(3), 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  valor           1   13[BANK0 ] unsigned char 
   706 ;;  temp            1   14[BANK0 ] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         0       1       0       0       0
   717 ;;      Locals:         0       2       0       0       0
   718 ;;      Temps:          0       3       0       0       0
   719 ;;      Totals:         0       6       0       0       0
   720 ;;Total ram usage:        6 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 4
   723 ;; This function calls:
   724 ;;		___awdiv
   725 ;;		___bmul
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731  0086                     _separar:	
   732                           ;psect for function _separar
   733                           
   734                           
   735                           ;incstack = 0
   736                           ; Regs used in _separar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   737                           ;separar@valor stored from wreg
   738  0086  1283               	bcf	3,5	;RP0=0, select bank0
   739  0087  1303               	bcf	3,6	;RP1=0, select bank0
   740  0088  00AD               	movwf	separar@valor
   741  0089                     l1084:
   742  0089                     l1086:
   743                           
   744                           ;main.c: 180:     temp = valor;
   745  0089  082D               	movf	separar@valor,w
   746  008A  00AA               	movwf	??_separar
   747  008B  082A               	movf	??_separar,w
   748  008C  00AE               	movwf	separar@temp
   749  008D                     l1088:
   750                           
   751                           ;main.c: 181:     vector[2] = temp/100;
   752  008D  3064               	movlw	100
   753  008E  00A0               	movwf	___awdiv@divisor
   754  008F  3000               	movlw	0
   755  0090  00A1               	movwf	___awdiv@divisor+1
   756  0091  082E               	movf	separar@temp,w
   757  0092  00AA               	movwf	??_separar
   758  0093  01AB               	clrf	??_separar+1
   759  0094  082A               	movf	??_separar,w
   760  0095  00A2               	movwf	___awdiv@dividend
   761  0096  082B               	movf	??_separar+1,w
   762  0097  00A3               	movwf	___awdiv@dividend+1
   763  0098  120A  118A  201D  120A  118A  	fcall	___awdiv
   764  009D  1283               	bcf	3,5	;RP0=0, select bank0
   765  009E  1303               	bcf	3,6	;RP1=0, select bank0
   766  009F  0820               	movf	?___awdiv,w
   767  00A0  00AC               	movwf	??_separar+2
   768  00A1  0829               	movf	separar@vector,w
   769  00A2  3E02               	addlw	2
   770  00A3  0084               	movwf	4
   771  00A4  082C               	movf	??_separar+2,w
   772  00A5  1383               	bcf	3,7	;select IRP bank0
   773  00A6  0080               	movwf	0
   774  00A7                     l1090:
   775                           
   776                           ;main.c: 182:     temp-= vector[2]*100;
   777  00A7  3064               	movlw	100
   778  00A8  00AA               	movwf	??_separar
   779  00A9  082A               	movf	??_separar,w
   780  00AA  00A0               	movwf	___bmul@multiplicand
   781  00AB  0829               	movf	separar@vector,w
   782  00AC  3E02               	addlw	2
   783  00AD  0084               	movwf	4
   784  00AE  0800               	movf	0,w
   785  00AF  120A  118A  21EB  120A  118A  	fcall	___bmul
   786  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   787  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   788  00B6  00AB               	movwf	??_separar+1
   789  00B7  082B               	movf	??_separar+1,w
   790  00B8  02AE               	subwf	separar@temp,f
   791  00B9                     l1092:
   792                           
   793                           ;main.c: 183:     vector[1] = temp/10;
   794  00B9  300A               	movlw	10
   795  00BA  00A0               	movwf	___awdiv@divisor
   796  00BB  3000               	movlw	0
   797  00BC  00A1               	movwf	___awdiv@divisor+1
   798  00BD  082E               	movf	separar@temp,w
   799  00BE  00AA               	movwf	??_separar
   800  00BF  01AB               	clrf	??_separar+1
   801  00C0  082A               	movf	??_separar,w
   802  00C1  00A2               	movwf	___awdiv@dividend
   803  00C2  082B               	movf	??_separar+1,w
   804  00C3  00A3               	movwf	___awdiv@dividend+1
   805  00C4  120A  118A  201D  120A  118A  	fcall	___awdiv
   806  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   807  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   808  00CB  0820               	movf	?___awdiv,w
   809  00CC  00AC               	movwf	??_separar+2
   810  00CD  0A29               	incf	separar@vector,w
   811  00CE  0084               	movwf	4
   812  00CF  082C               	movf	??_separar+2,w
   813  00D0  1383               	bcf	3,7	;select IRP bank0
   814  00D1  0080               	movwf	0
   815  00D2                     l1094:
   816                           
   817                           ;main.c: 184:     temp-= vector[1]*10;
   818  00D2  300A               	movlw	10
   819  00D3  00AA               	movwf	??_separar
   820  00D4  082A               	movf	??_separar,w
   821  00D5  00A0               	movwf	___bmul@multiplicand
   822  00D6  0A29               	incf	separar@vector,w
   823  00D7  0084               	movwf	4
   824  00D8  0800               	movf	0,w
   825  00D9  120A  118A  21EB  120A  118A  	fcall	___bmul
   826  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   827  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   828  00E0  00AB               	movwf	??_separar+1
   829  00E1  082B               	movf	??_separar+1,w
   830  00E2  02AE               	subwf	separar@temp,f
   831  00E3                     l1096:
   832                           
   833                           ;main.c: 185:     vector[0] = temp;
   834  00E3  082E               	movf	separar@temp,w
   835  00E4  00AA               	movwf	??_separar
   836  00E5  0829               	movf	separar@vector,w
   837  00E6  0084               	movwf	4
   838  00E7  082A               	movf	??_separar,w
   839  00E8  1383               	bcf	3,7	;select IRP bank0
   840  00E9  0080               	movwf	0
   841  00EA                     l104:
   842  00EA  0008               	return
   843  00EB                     __end_of_separar:
   844                           
   845                           	psect	text5
   846  01EB                     __ptext5:	
   847 ;; *************** function ___bmul *****************
   848 ;; Defined at:
   849 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  multiplier      1    wreg     unsigned char 
   852 ;;  multiplicand    1    0[BANK0 ] unsigned char 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  multiplier      1    3[BANK0 ] unsigned char 
   855 ;;  product         1    2[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      unsigned char 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       1       0       0       0
   866 ;;      Locals:         0       2       0       0       0
   867 ;;      Temps:          0       1       0       0       0
   868 ;;      Totals:         0       4       0       0       0
   869 ;;Total ram usage:        4 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 3
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_separar
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879  01EB                     ___bmul:	
   880                           ;psect for function ___bmul
   881                           
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   885                           ;___bmul@multiplier stored from wreg
   886  01EB  1283               	bcf	3,5	;RP0=0, select bank0
   887  01EC  1303               	bcf	3,6	;RP1=0, select bank0
   888  01ED  00A3               	movwf	___bmul@multiplier
   889  01EE                     l968:
   890  01EE  01A2               	clrf	___bmul@product
   891  01EF                     l970:
   892  01EF  1C23               	btfss	___bmul@multiplier,0
   893  01F0  29F2               	goto	u191
   894  01F1  29F3               	goto	u190
   895  01F2                     u191:
   896  01F2  29F7               	goto	l974
   897  01F3                     u190:
   898  01F3                     l972:
   899  01F3  0820               	movf	___bmul@multiplicand,w
   900  01F4  00A1               	movwf	??___bmul
   901  01F5  0821               	movf	??___bmul,w
   902  01F6  07A2               	addwf	___bmul@product,f
   903  01F7                     l974:
   904  01F7  1003               	clrc
   905  01F8  0DA0               	rlf	___bmul@multiplicand,f
   906  01F9                     l976:
   907  01F9  1003               	clrc
   908  01FA  0CA3               	rrf	___bmul@multiplier,f
   909  01FB  0823               	movf	___bmul@multiplier,w
   910  01FC  1D03               	btfss	3,2
   911  01FD  29FF               	goto	u201
   912  01FE  2A00               	goto	u200
   913  01FF                     u201:
   914  01FF  29EF               	goto	l970
   915  0200                     u200:
   916  0200                     l978:
   917  0200  0822               	movf	___bmul@product,w
   918  0201                     l224:
   919  0201  0008               	return
   920  0202                     __end_of___bmul:
   921                           
   922                           	psect	text6
   923  001D                     __ptext6:	
   924 ;; *************** function ___awdiv *****************
   925 ;; Defined at:
   926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  divisor         2    0[BANK0 ] int 
   929 ;;  dividend        2    2[BANK0 ] int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  quotient        2    7[BANK0 ] int 
   932 ;;  sign            1    6[BANK0 ] unsigned char 
   933 ;;  counter         1    5[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    0[BANK0 ] int 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       4       0       0       0
   944 ;;      Locals:         0       4       0       0       0
   945 ;;      Temps:          0       1       0       0       0
   946 ;;      Totals:         0       9       0       0       0
   947 ;;Total ram usage:        9 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 3
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_separar
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957  001D                     ___awdiv:	
   958                           ;psect for function ___awdiv
   959                           
   960  001D                     l982:	
   961                           ;incstack = 0
   962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   963                           
   964  001D  1283               	bcf	3,5	;RP0=0, select bank0
   965  001E  1303               	bcf	3,6	;RP1=0, select bank0
   966  001F  01A6               	clrf	___awdiv@sign
   967  0020                     l984:
   968  0020  1FA1               	btfss	___awdiv@divisor+1,7
   969  0021  2823               	goto	u211
   970  0022  2824               	goto	u210
   971  0023                     u211:
   972  0023  282B               	goto	l990
   973  0024                     u210:
   974  0024                     l986:
   975  0024  09A0               	comf	___awdiv@divisor,f
   976  0025  09A1               	comf	___awdiv@divisor+1,f
   977  0026  0AA0               	incf	___awdiv@divisor,f
   978  0027  1903               	skipnz
   979  0028  0AA1               	incf	___awdiv@divisor+1,f
   980  0029                     l988:
   981  0029  01A6               	clrf	___awdiv@sign
   982  002A  0AA6               	incf	___awdiv@sign,f
   983  002B                     l990:
   984  002B  1FA3               	btfss	___awdiv@dividend+1,7
   985  002C  282E               	goto	u221
   986  002D  282F               	goto	u220
   987  002E                     u221:
   988  002E  2838               	goto	l996
   989  002F                     u220:
   990  002F                     l992:
   991  002F  09A2               	comf	___awdiv@dividend,f
   992  0030  09A3               	comf	___awdiv@dividend+1,f
   993  0031  0AA2               	incf	___awdiv@dividend,f
   994  0032  1903               	skipnz
   995  0033  0AA3               	incf	___awdiv@dividend+1,f
   996  0034                     l994:
   997  0034  3001               	movlw	1
   998  0035  00A4               	movwf	??___awdiv
   999  0036  0824               	movf	??___awdiv,w
  1000  0037  06A6               	xorwf	___awdiv@sign,f
  1001  0038                     l996:
  1002  0038  01A7               	clrf	___awdiv@quotient
  1003  0039  01A8               	clrf	___awdiv@quotient+1
  1004  003A                     l998:
  1005  003A  0820               	movf	___awdiv@divisor,w
  1006  003B  0421               	iorwf	___awdiv@divisor+1,w
  1007  003C  1903               	btfsc	3,2
  1008  003D  283F               	goto	u231
  1009  003E  2840               	goto	u230
  1010  003F                     u231:
  1011  003F  2877               	goto	l1018
  1012  0040                     u230:
  1013  0040                     l1000:
  1014  0040  01A5               	clrf	___awdiv@counter
  1015  0041  0AA5               	incf	___awdiv@counter,f
  1016  0042  284E               	goto	l1006
  1017  0043                     l1002:
  1018  0043  3001               	movlw	1
  1019  0044                     u245:
  1020  0044  1003               	clrc
  1021  0045  0DA0               	rlf	___awdiv@divisor,f
  1022  0046  0DA1               	rlf	___awdiv@divisor+1,f
  1023  0047  3EFF               	addlw	-1
  1024  0048  1D03               	skipz
  1025  0049  2844               	goto	u245
  1026  004A                     l1004:
  1027  004A  3001               	movlw	1
  1028  004B  00A4               	movwf	??___awdiv
  1029  004C  0824               	movf	??___awdiv,w
  1030  004D  07A5               	addwf	___awdiv@counter,f
  1031  004E                     l1006:
  1032  004E  1FA1               	btfss	___awdiv@divisor+1,7
  1033  004F  2851               	goto	u251
  1034  0050  2852               	goto	u250
  1035  0051                     u251:
  1036  0051  2843               	goto	l1002
  1037  0052                     u250:
  1038  0052                     l1008:
  1039  0052  3001               	movlw	1
  1040  0053                     u265:
  1041  0053  1003               	clrc
  1042  0054  0DA7               	rlf	___awdiv@quotient,f
  1043  0055  0DA8               	rlf	___awdiv@quotient+1,f
  1044  0056  3EFF               	addlw	-1
  1045  0057  1D03               	skipz
  1046  0058  2853               	goto	u265
  1047  0059  0821               	movf	___awdiv@divisor+1,w
  1048  005A  0223               	subwf	___awdiv@dividend+1,w
  1049  005B  1D03               	skipz
  1050  005C  285F               	goto	u275
  1051  005D  0820               	movf	___awdiv@divisor,w
  1052  005E  0222               	subwf	___awdiv@dividend,w
  1053  005F                     u275:
  1054  005F  1C03               	skipc
  1055  0060  2862               	goto	u271
  1056  0061  2863               	goto	u270
  1057  0062                     u271:
  1058  0062  286A               	goto	l1014
  1059  0063                     u270:
  1060  0063                     l1010:
  1061  0063  0820               	movf	___awdiv@divisor,w
  1062  0064  02A2               	subwf	___awdiv@dividend,f
  1063  0065  0821               	movf	___awdiv@divisor+1,w
  1064  0066  1C03               	skipc
  1065  0067  03A3               	decf	___awdiv@dividend+1,f
  1066  0068  02A3               	subwf	___awdiv@dividend+1,f
  1067  0069                     l1012:
  1068  0069  1427               	bsf	___awdiv@quotient,0
  1069  006A                     l1014:
  1070  006A  3001               	movlw	1
  1071  006B                     u285:
  1072  006B  1003               	clrc
  1073  006C  0CA1               	rrf	___awdiv@divisor+1,f
  1074  006D  0CA0               	rrf	___awdiv@divisor,f
  1075  006E  3EFF               	addlw	-1
  1076  006F  1D03               	skipz
  1077  0070  286B               	goto	u285
  1078  0071                     l1016:
  1079  0071  3001               	movlw	1
  1080  0072  02A5               	subwf	___awdiv@counter,f
  1081  0073  1D03               	btfss	3,2
  1082  0074  2876               	goto	u291
  1083  0075  2877               	goto	u290
  1084  0076                     u291:
  1085  0076  2852               	goto	l1008
  1086  0077                     u290:
  1087  0077                     l1018:
  1088  0077  0826               	movf	___awdiv@sign,w
  1089  0078  1903               	btfsc	3,2
  1090  0079  287B               	goto	u301
  1091  007A  287C               	goto	u300
  1092  007B                     u301:
  1093  007B  2881               	goto	l1022
  1094  007C                     u300:
  1095  007C                     l1020:
  1096  007C  09A7               	comf	___awdiv@quotient,f
  1097  007D  09A8               	comf	___awdiv@quotient+1,f
  1098  007E  0AA7               	incf	___awdiv@quotient,f
  1099  007F  1903               	skipnz
  1100  0080  0AA8               	incf	___awdiv@quotient+1,f
  1101  0081                     l1022:
  1102  0081  0828               	movf	___awdiv@quotient+1,w
  1103  0082  00A1               	movwf	?___awdiv+1
  1104  0083  0827               	movf	___awdiv@quotient,w
  1105  0084  00A0               	movwf	?___awdiv
  1106  0085                     l351:
  1107  0085  0008               	return
  1108  0086                     __end_of___awdiv:
  1109                           
  1110                           	psect	text7
  1111  0224                     __ptext7:	
  1112 ;; *************** function _clk *****************
  1113 ;; Defined at:
  1114 ;;		line 171 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; Hardware stack levels required when called: 3
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142  0224                     _clk:	
  1143                           ;psect for function _clk
  1144                           
  1145  0224                     l1078:	
  1146                           ;incstack = 0
  1147                           ; Regs used in _clk: [wreg+status,2+status,0]
  1148                           
  1149                           
  1150                           ;main.c: 172:     OSCCONbits.IRCF = 0b0110;
  1151  0224  1683               	bsf	3,5	;RP0=1, select bank1
  1152  0225  1303               	bcf	3,6	;RP1=0, select bank1
  1153  0226  080F               	movf	15,w	;volatile
  1154  0227  398F               	andlw	-113
  1155  0228  3860               	iorlw	96
  1156  0229  008F               	movwf	15	;volatile
  1157  022A                     l1080:
  1158                           
  1159                           ;main.c: 173:     OSCCONbits.SCS = 1;
  1160  022A  140F               	bsf	15,0	;volatile
  1161  022B                     l101:
  1162  022B  0008               	return
  1163  022C                     __end_of_clk:
  1164                           
  1165                           	psect	text8
  1166  0195                     __ptext8:	
  1167 ;; *************** function _isr *****************
  1168 ;; Defined at:
  1169 ;;		line 113 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0
  1185 ;;      Temps:          4       0       0       0       0
  1186 ;;      Totals:         4       0       0       0       0
  1187 ;;Total ram usage:        4 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 2
  1190 ;; This function calls:
  1191 ;;		_multiplexado
  1192 ;; This function is called by:
  1193 ;;		Interrupt level 1
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197  0195                     _isr:	
  1198                           ;psect for function _isr
  1199                           
  1200  0195                     i1l1100:
  1201                           
  1202                           ;main.c: 114:     if (RBIF){
  1203  0195  1C0B               	btfss	11,0	;volatile
  1204  0196  2998               	goto	u33_21
  1205  0197  2999               	goto	u33_20
  1206  0198                     u33_21:
  1207  0198  29AB               	goto	i1l1110
  1208  0199                     u33_20:
  1209  0199                     i1l1102:
  1210                           
  1211                           ;main.c: 115:         if(PORTBbits.RB0){
  1212  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1213  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1214  019B  1C06               	btfss	6,0	;volatile
  1215  019C  299E               	goto	u34_21
  1216  019D  299F               	goto	u34_20
  1217  019E                     u34_21:
  1218  019E  29A4               	goto	i1l85
  1219  019F                     u34_20:
  1220  019F                     i1l1104:
  1221                           
  1222                           ;main.c: 116:             contador++;
  1223  019F  3001               	movlw	1
  1224  01A0  00F5               	movwf	??_isr
  1225  01A1  0875               	movf	??_isr,w
  1226  01A2  07B0               	addwf	_contador,f
  1227                           
  1228                           ;main.c: 117:         }
  1229  01A3  29AA               	goto	i1l1108
  1230  01A4                     i1l85:	
  1231                           ;main.c: 118:         else if(PORTBbits.RB1){
  1232                           
  1233  01A4  1C86               	btfss	6,1	;volatile
  1234  01A5  29A7               	goto	u35_21
  1235  01A6  29A8               	goto	u35_20
  1236  01A7                     u35_21:
  1237  01A7  29AA               	goto	i1l1108
  1238  01A8                     u35_20:
  1239  01A8                     i1l1106:
  1240                           
  1241                           ;main.c: 119:             contador--;
  1242  01A8  3001               	movlw	1
  1243  01A9  02B0               	subwf	_contador,f
  1244  01AA                     i1l1108:
  1245                           
  1246                           ;main.c: 121:         RBIF = 0;
  1247  01AA  100B               	bcf	11,0	;volatile
  1248  01AB                     i1l1110:
  1249                           
  1250                           ;main.c: 123:     if(T0IF){
  1251  01AB  1D0B               	btfss	11,2	;volatile
  1252  01AC  29AE               	goto	u36_21
  1253  01AD  29AF               	goto	u36_20
  1254  01AE                     u36_21:
  1255  01AE  29BA               	goto	i1l89
  1256  01AF                     u36_20:
  1257  01AF                     i1l1112:
  1258                           
  1259                           ;main.c: 124:         TMR0 = 236;
  1260  01AF  30EC               	movlw	236
  1261  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1262  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1263  01B2  0081               	movwf	1	;volatile
  1264  01B3                     i1l1114:
  1265                           
  1266                           ;main.c: 125:         PORTD = 0;
  1267  01B3  0188               	clrf	8	;volatile
  1268  01B4                     i1l1116:
  1269                           
  1270                           ;main.c: 126:         multiplexado();
  1271  01B4  120A  118A  214C  120A  118A  	fcall	_multiplexado
  1272  01B9                     i1l1118:
  1273                           
  1274                           ;main.c: 127:         T0IF = 0;
  1275  01B9  110B               	bcf	11,2	;volatile
  1276  01BA                     i1l89:
  1277  01BA  0878               	movf	??_isr+3,w
  1278  01BB  008A               	movwf	10
  1279  01BC  0877               	movf	??_isr+2,w
  1280  01BD  0084               	movwf	4
  1281  01BE  0E76               	swapf	??_isr+1,w
  1282  01BF  0083               	movwf	3
  1283  01C0  0EFE               	swapf	btemp,f
  1284  01C1  0E7E               	swapf	btemp,w
  1285  01C2  0009               	retfie
  1286  01C3                     __end_of_isr:
  1287                           
  1288                           	psect	intentry
  1289  0004                     __pintentry:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1292                           
  1293  0004                     interrupt_function:
  1294  007E                     saved_w	set	btemp
  1295  0004  00FE               	movwf	btemp
  1296  0005  0E03               	swapf	3,w
  1297  0006  00F6               	movwf	??_isr+1
  1298  0007  0804               	movf	4,w
  1299  0008  00F7               	movwf	??_isr+2
  1300  0009  080A               	movf	10,w
  1301  000A  00F8               	movwf	??_isr+3
  1302  000B  120A  118A  2995   	ljmp	_isr
  1303                           
  1304                           	psect	text9
  1305  014C                     __ptext9:	
  1306 ;; *************** function _multiplexado *****************
  1307 ;; Defined at:
  1308 ;;		line 80 in file "main.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          2       0       0       0       0
  1325 ;;      Totals:         2       0       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 1
  1329 ;; This function calls:
  1330 ;;		_codificar_7seg
  1331 ;; This function is called by:
  1332 ;;		_isr
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336  014C                     _multiplexado:	
  1337                           ;psect for function _multiplexado
  1338                           
  1339  014C                     i1l1026:	
  1340                           ;incstack = 0
  1341                           ; Regs used in _multiplexado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1342                           
  1343                           
  1344                           ;main.c: 81:     if(selector < 4)
  1345  014C  3004               	movlw	4
  1346  014D  0279               	subwf	_selector,w
  1347  014E  1803               	skipnc
  1348  014F  2951               	goto	u31_21
  1349  0150  2952               	goto	u31_20
  1350  0151                     u31_21:
  1351  0151  295F               	goto	i1l69
  1352  0152                     u31_20:
  1353  0152                     i1l1028:
  1354                           
  1355                           ;main.c: 82:     {;main.c: 83:         if(selector == 0)
  1356  0152  0879               	movf	_selector,w
  1357  0153  1D03               	btfss	3,2
  1358  0154  2956               	goto	u32_21
  1359  0155  2957               	goto	u32_20
  1360  0156                     u32_21:
  1361  0156  295C               	goto	i1l1032
  1362  0157                     u32_20:
  1363  0157                     i1l1030:
  1364                           
  1365                           ;main.c: 84:             selector++;
  1366  0157  3001               	movlw	1
  1367  0158  00F3               	movwf	??_multiplexado
  1368  0159  0873               	movf	??_multiplexado,w
  1369  015A  07F9               	addwf	_selector,f
  1370  015B  2981               	goto	i1l1048
  1371  015C                     i1l1032:
  1372                           
  1373                           ;main.c: 86:             selector *= 2;
  1374  015C  1003               	clrc
  1375  015D  0DF9               	rlf	_selector,f
  1376  015E  2981               	goto	i1l1048
  1377  015F                     i1l69:	
  1378                           ;main.c: 88:     else
  1379                           
  1380                           
  1381                           ;main.c: 89:         selector = 1;
  1382  015F  01F9               	clrf	_selector
  1383  0160  0AF9               	incf	_selector,f
  1384  0161  2981               	goto	i1l1048
  1385  0162                     i1l1034:
  1386                           
  1387                           ;main.c: 93:             codificar_7seg(vector[0]);
  1388  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0164  0831               	movf	_vector,w
  1391  0165  120A  118A  20EB  120A  118A  	fcall	_codificar_7seg
  1392  016A                     i1l1036:
  1393                           
  1394                           ;main.c: 94:             PORTD = selector;
  1395  016A  0879               	movf	_selector,w
  1396  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1397  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  016D  0088               	movwf	8	;volatile
  1399                           
  1400                           ;main.c: 95:             break;
  1401  016E  2994               	goto	i1l79
  1402  016F                     i1l1038:
  1403                           
  1404                           ;main.c: 98:             codificar_7seg(vector[1]);
  1405  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0171  0832               	movf	_vector+1,w
  1408  0172  120A  118A  20EB  120A  118A  	fcall	_codificar_7seg
  1409  0177  296A               	goto	i1l1036
  1410  0178                     i1l1042:
  1411                           
  1412                           ;main.c: 103:             codificar_7seg(vector[2]);
  1413  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1415  017A  0833               	movf	_vector+2,w
  1416  017B  120A  118A  20EB  120A  118A  	fcall	_codificar_7seg
  1417  0180  296A               	goto	i1l1036
  1418  0181                     i1l1048:
  1419  0181  0879               	movf	_selector,w
  1420  0182  00F3               	movwf	??_multiplexado
  1421  0183  01F4               	clrf	??_multiplexado+1
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ; direct_byte           11     8 (fixed)
  1430                           ; jumptable            260     6 (fixed)
  1431                           ;	Chosen strategy is simple_byte
  1432  0184  0874               	movf	??_multiplexado+1,w
  1433  0185  3A00               	xorlw	0	; case 0
  1434  0186  1903               	skipnz
  1435  0187  2989               	goto	i1l1168
  1436  0188  2994               	goto	i1l79
  1437  0189                     i1l1168:
  1438                           
  1439                           ; Switch size 1, requested type "simple"
  1440                           ; Number of cases is 3, Range of values is 1 to 4
  1441                           ; switch strategies available:
  1442                           ; Name         Instructions Cycles
  1443                           ; simple_byte           10     6 (average)
  1444                           ; direct_byte           23    11 (fixed)
  1445                           ; jumptable            263     9 (fixed)
  1446                           ;	Chosen strategy is simple_byte
  1447  0189  0873               	movf	??_multiplexado,w
  1448  018A  3A01               	xorlw	1	; case 1
  1449  018B  1903               	skipnz
  1450  018C  2962               	goto	i1l1034
  1451  018D  3A03               	xorlw	3	; case 2
  1452  018E  1903               	skipnz
  1453  018F  296F               	goto	i1l1038
  1454  0190  3A06               	xorlw	6	; case 4
  1455  0191  1903               	skipnz
  1456  0192  2978               	goto	i1l1042
  1457  0193  2994               	goto	i1l79
  1458  0194                     i1l79:
  1459  0194  0008               	return
  1460  0195                     __end_of_multiplexado:
  1461                           
  1462                           	psect	text10
  1463  00EB                     __ptext10:	
  1464 ;; *************** function _codificar_7seg *****************
  1465 ;; Defined at:
  1466 ;;		line 41 in file "main.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  valor           1    wreg     unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  valor           1    2[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0
  1482 ;;      Temps:          2       0       0       0       0
  1483 ;;      Totals:         3       0       0       0       0
  1484 ;;Total ram usage:        3 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_multiplexado
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493  00EB                     _codificar_7seg:	
  1494                           ;psect for function _codificar_7seg
  1495                           
  1496                           
  1497                           ;incstack = 0
  1498                           ; Regs used in _codificar_7seg: [wreg-fsr0h+status,2+status,0]
  1499                           ;codificar_7seg@valor stored from wreg
  1500  00EB  00F2               	movwf	codificar_7seg@valor
  1501  00EC                     i1l936:
  1502                           
  1503                           ;main.c: 42:     switch(valor){
  1504  00EC  2923               	goto	i1l962
  1505  00ED                     i1l938:
  1506                           
  1507                           ;main.c: 44:             PORTC = 0b00111111;
  1508  00ED  303F               	movlw	63
  1509  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1510  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1511  00F0  0087               	movwf	7	;volatile
  1512                           
  1513                           ;main.c: 45:             break;
  1514  00F1  294B               	goto	i1l66
  1515  00F2                     i1l940:
  1516                           
  1517                           ;main.c: 47:             PORTC = 0b00000110;
  1518  00F2  3006               	movlw	6
  1519  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1520  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1521  00F5  0087               	movwf	7	;volatile
  1522                           
  1523                           ;main.c: 48:             break;
  1524  00F6  294B               	goto	i1l66
  1525  00F7                     i1l942:
  1526                           
  1527                           ;main.c: 50:             PORTC = 0b01011011;
  1528  00F7  305B               	movlw	91
  1529  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1530  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1531  00FA  0087               	movwf	7	;volatile
  1532                           
  1533                           ;main.c: 51:             break;
  1534  00FB  294B               	goto	i1l66
  1535  00FC                     i1l944:
  1536                           
  1537                           ;main.c: 53:             PORTC = 0b01001111;
  1538  00FC  304F               	movlw	79
  1539  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1540  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1541  00FF  0087               	movwf	7	;volatile
  1542                           
  1543                           ;main.c: 54:             break;
  1544  0100  294B               	goto	i1l66
  1545  0101                     i1l946:
  1546                           
  1547                           ;main.c: 56:             PORTC = 0b01100110;
  1548  0101  3066               	movlw	102
  1549  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0104  0087               	movwf	7	;volatile
  1552                           
  1553                           ;main.c: 57:             break;
  1554  0105  294B               	goto	i1l66
  1555  0106                     i1l948:
  1556                           
  1557                           ;main.c: 59:             PORTC = 0b01101101;
  1558  0106  306D               	movlw	109
  1559  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0109  0087               	movwf	7	;volatile
  1562                           
  1563                           ;main.c: 60:             break;
  1564  010A  294B               	goto	i1l66
  1565  010B                     i1l950:
  1566                           
  1567                           ;main.c: 62:             PORTC = 0b01111101;
  1568  010B  307D               	movlw	125
  1569  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1570  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1571  010E  0087               	movwf	7	;volatile
  1572                           
  1573                           ;main.c: 63:             break;
  1574  010F  294B               	goto	i1l66
  1575  0110                     i1l952:
  1576                           
  1577                           ;main.c: 65:             PORTC = 0b00000111;
  1578  0110  3007               	movlw	7
  1579  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1580  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1581  0113  0087               	movwf	7	;volatile
  1582                           
  1583                           ;main.c: 66:             break;
  1584  0114  294B               	goto	i1l66
  1585  0115                     i1l954:
  1586                           
  1587                           ;main.c: 68:             PORTC = 0b01111111;
  1588  0115  307F               	movlw	127
  1589  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0118  0087               	movwf	7	;volatile
  1592                           
  1593                           ;main.c: 69:             break;
  1594  0119  294B               	goto	i1l66
  1595  011A                     i1l956:
  1596                           
  1597                           ;main.c: 71:             PORTC = 0b01101111;
  1598  011A  306F               	movlw	111
  1599  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1600  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1601  011D  0087               	movwf	7	;volatile
  1602                           
  1603                           ;main.c: 72:             break;
  1604  011E  294B               	goto	i1l66
  1605  011F                     i1l958:
  1606                           
  1607                           ;main.c: 74:             PORTC = 0b00000000;
  1608  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0121  0187               	clrf	7	;volatile
  1611                           
  1612                           ;main.c: 75:             break;
  1613  0122  294B               	goto	i1l66
  1614  0123                     i1l962:
  1615  0123  0872               	movf	codificar_7seg@valor,w
  1616  0124  00F0               	movwf	??_codificar_7seg
  1617  0125  01F1               	clrf	??_codificar_7seg+1
  1618                           
  1619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 1, Range of values is 0 to 0
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte            4     3 (average)
  1625                           ; direct_byte           11     8 (fixed)
  1626                           ; jumptable            260     6 (fixed)
  1627                           ;	Chosen strategy is simple_byte
  1628  0126  0871               	movf	??_codificar_7seg+1,w
  1629  0127  3A00               	xorlw	0	; case 0
  1630  0128  1903               	skipnz
  1631  0129  292B               	goto	i1l1170
  1632  012A  291F               	goto	i1l958
  1633  012B                     i1l1170:
  1634                           
  1635                           ; Switch size 1, requested type "simple"
  1636                           ; Number of cases is 10, Range of values is 0 to 9
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte           31    16 (average)
  1640                           ; direct_byte           38     8 (fixed)
  1641                           ; jumptable            260     6 (fixed)
  1642                           ;	Chosen strategy is simple_byte
  1643  012B  0870               	movf	??_codificar_7seg,w
  1644  012C  3A00               	xorlw	0	; case 0
  1645  012D  1903               	skipnz
  1646  012E  28ED               	goto	i1l938
  1647  012F  3A01               	xorlw	1	; case 1
  1648  0130  1903               	skipnz
  1649  0131  28F2               	goto	i1l940
  1650  0132  3A03               	xorlw	3	; case 2
  1651  0133  1903               	skipnz
  1652  0134  28F7               	goto	i1l942
  1653  0135  3A01               	xorlw	1	; case 3
  1654  0136  1903               	skipnz
  1655  0137  28FC               	goto	i1l944
  1656  0138  3A07               	xorlw	7	; case 4
  1657  0139  1903               	skipnz
  1658  013A  2901               	goto	i1l946
  1659  013B  3A01               	xorlw	1	; case 5
  1660  013C  1903               	skipnz
  1661  013D  2906               	goto	i1l948
  1662  013E  3A03               	xorlw	3	; case 6
  1663  013F  1903               	skipnz
  1664  0140  290B               	goto	i1l950
  1665  0141  3A01               	xorlw	1	; case 7
  1666  0142  1903               	skipnz
  1667  0143  2910               	goto	i1l952
  1668  0144  3A0F               	xorlw	15	; case 8
  1669  0145  1903               	skipnz
  1670  0146  2915               	goto	i1l954
  1671  0147  3A01               	xorlw	1	; case 9
  1672  0148  1903               	skipnz
  1673  0149  291A               	goto	i1l956
  1674  014A  291F               	goto	i1l958
  1675  014B                     i1l66:
  1676  014B  0008               	return
  1677  014C                     __end_of_codificar_7seg:
  1678  007E                     btemp	set	126	;btemp
  1679  007E                     wtemp0	set	126
  1680                           
  1681                           	psect	idloc
  1682                           
  1683                           ;Config register IDLOC0 @ 0x2000
  1684                           ;	unspecified, using default values
  1685  2000                     	org	8192
  1686  2000  3FFF               	dw	16383
  1687                           
  1688                           ;Config register IDLOC1 @ 0x2001
  1689                           ;	unspecified, using default values
  1690  2001                     	org	8193
  1691  2001  3FFF               	dw	16383
  1692                           
  1693                           ;Config register IDLOC2 @ 0x2002
  1694                           ;	unspecified, using default values
  1695  2002                     	org	8194
  1696  2002  3FFF               	dw	16383
  1697                           
  1698                           ;Config register IDLOC3 @ 0x2003
  1699                           ;	unspecified, using default values
  1700  2003                     	org	8195
  1701  2003  3FFF               	dw	16383
  1702                           
  1703                           	psect	config
  1704                           
  1705                           ;Config register CONFIG1 @ 0x2007
  1706                           ;	Oscillator Selection bits
  1707                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1708                           ;	Watchdog Timer Enable bit
  1709                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1710                           ;	Power-up Timer Enable bit
  1711                           ;	PWRTE = OFF, PWRT disabled
  1712                           ;	RE3/MCLR pin function select bit
  1713                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1714                           ;	Code Protection bit
  1715                           ;	CP = OFF, Program memory code protection is disabled
  1716                           ;	Data Code Protection bit
  1717                           ;	CPD = OFF, Data memory code protection is disabled
  1718                           ;	Brown Out Reset Selection bits
  1719                           ;	BOREN = OFF, BOR disabled
  1720                           ;	Internal External Switchover bit
  1721                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1722                           ;	Fail-Safe Clock Monitor Enabled bit
  1723                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1724                           ;	Low Voltage Programming Enable bit
  1725                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1726                           ;	In-Circuit Debugger Mode bit
  1727                           ;	DEBUG = 0x1, unprogrammed default
  1728  2007                     	org	8199
  1729  2007  20D4               	dw	8404
  1730                           
  1731                           ;Config register CONFIG2 @ 0x2008
  1732                           ;	Brown-out Reset Selection bit
  1733                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1734                           ;	Flash Program Memory Self Write Enable bits
  1735                           ;	WRT = OFF, Write protection off
  1736  2008                     	org	8200
  1737  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80     16      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    separar@vector	PTR unsigned char  size(1) Largest target is 3
		 -> vector(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_multiplexado
    _multiplexado->_codificar_7seg

Critical Paths under _main in BANK0

    _main->_separar
    _separar->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1126
                                             15 BANK0      1     1      0
                                _clk
                            _separar
                              _setup
                          _setup_int
                             _timer0
 ---------------------------------------------------------------------------------
 (1) _timer0                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_int                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _separar                                              6     5      1    1126
                                              9 BANK0      6     5      1
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     244
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _clk                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      22
                                              5 COMMON     4     4      0
                       _multiplexado
 ---------------------------------------------------------------------------------
 (4) _multiplexado                                         2     2      0      22
                                              3 COMMON     2     2      0
                     _codificar_7seg
 ---------------------------------------------------------------------------------
 (5) _codificar_7seg                                       3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clk
   _separar
     ___awdiv
     ___bmul
   _setup
   _setup_int
   _timer0

 _isr (ROOT)
   _multiplexado
     _codificar_7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Apr 07 21:24:44 2022

         ___bmul@product 0022                       l92 0223                       l95 0232  
                     l98 0216             ___awdiv@sign 0026                      l101 022B  
                    l104 00EA                      l224 0201                      l351 0085  
                    l970 01EF                      l972 01F3                      l990 002B  
                    l982 001D                      l974 01F7                      l992 002F  
                    l984 0020                      l976 01F9                      l968 01EE  
                    l994 0034                      l986 0024                      l978 0200  
                    l996 0038                      l988 0029                      l998 003A  
                    u200 0200                      u201 01FF                      u210 0024  
                    u211 0023                      u300 007C                      u220 002F  
                    u301 007B                      u221 002E                      u230 0040  
                    u231 003F                      u250 0052                      u251 0051  
                    u245 0044                      u270 0063                      u190 01F3  
                    u271 0062                      u191 01F2                      u265 0053  
                    u290 0077                      u291 0076                      u275 005F  
                    u285 006B                      _cod 007A                      _clk 0224  
                    _isr 0195                      fsr0 0004                      indf 0000  
                   l1000 0040                     l1010 0063                     l1002 0043  
                   l1020 007C                     l1012 0069                     l1004 004A  
                   l1022 0081                     l1014 006A                     l1006 004E  
                   l1016 0071                     l1008 0052                     l1018 0077  
                   l1122 01C3                     l1060 022C                     l1124 01D7  
                   l1070 0211                     l1054 0217                     l1126 01E3  
                   l1080 022A                     l1072 0212                     l1064 0202  
                   l1056 021F                     l1090 00A7                     l1074 0215  
                   l1066 020C                     l1092 00B9                     l1084 0089  
                   l1068 020E                     l1078 0224                     l1094 00D2  
                   l1086 0089                     l1096 00E3                     l1088 008D  
                   ?_clk 0070                     ?_isr 0070                     _T0IF 005A  
                   _IOCB 0096                     _RBIF 0058                     i1l66 014B  
                   i1l69 015F                     i1l85 01A4                     i1l79 0194  
                   i1l89 01BA                     _TMR0 0001                     _main 01C3  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
                  ??_clk 0020                    ??_isr 0075                    ?_main 0070  
        __end_of___awdiv 0086                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l940 00F2                    i1l950 010B                    i1l942 00F7  
                  i1l952 0110                    i1l944 00FC                    i1l936 00EC  
                  i1l954 0115                    i1l946 0101                    i1l938 00ED  
                  i1l962 0123                    i1l956 011A                    i1l948 0106  
                  i1l958 011F          ___awdiv@counter 0025                    u31_20 0152  
                  u31_21 0151                    u32_20 0157                    u32_21 0156  
                  u33_20 0199                    u33_21 0198                    u34_20 019F  
                  u34_21 019E                    u35_20 01A8                    u35_21 01A7  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u36_20 01AF  
                  u36_21 01AE                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0202          __end_of_separar 00EB                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 01EB                   ??_main 002F         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1100 0195  
                 i1l1030 0157                   i1l1102 0199                   i1l1110 01AB  
                 i1l1032 015C                   i1l1112 01AF                   i1l1104 019F  
                 i1l1042 0178                   i1l1034 0162                   i1l1026 014C  
                 i1l1114 01B3                   i1l1106 01A8                   i1l1036 016A  
                 i1l1028 0152                   i1l1116 01B4                   i1l1108 01AA  
                 i1l1038 016F                   i1l1118 01B9                   i1l1048 0181  
                 i1l1170 012B                   i1l1168 0189                   _INTCON 000B  
                 ___bmul 01EB                ??___awdiv 0024         ___awdiv@quotient 0027  
                 _timer0 0217                   _vector 0031                   saved_w 007E  
              ??_separar 002A  __end_of__initialization 0019      ___bmul@multiplicand 0020  
         __pcstackCOMMON 0070            __end_of_setup 0217           _OPTION_REGbits 0081  
                ??_setup 0020               __pbssBANK0 0030               __pmaintext 01C3  
                ?___bmul 0020               __pintentry 0004                  ?_timer0 0070  
                ___awdiv 001D              separar@temp 002E                  __ptext1 0217  
                __ptext2 022C                  __ptext3 0202                  __ptext4 0086  
                __ptext5 01EB                  __ptext6 001D                  __ptext7 0224  
                __ptext8 0195                  __ptext9 014C                  _separar 0086  
   end_of_initialization 0019        __end_of_setup_int 0233                _PORTBbits 0006  
          ?_multiplexado 0070           _codificar_7seg 00EB           __end_of___bmul 0202  
         ??_multiplexado 0073           __end_of_timer0 0224      start_initialization 0011  
            __end_of_clk 022C              __end_of_isr 01C3   __end_of_codificar_7seg 014C  
               ??___bmul 0021                 ??_timer0 0020              __pbssCOMMON 0079  
              ___latbits 0002            __pcstackBANK0 0020            separar@vector 0029  
        ?_codificar_7seg 0070                 ?___awdiv 0020                 ?_separar 0029  
      interrupt_function 0004     __end_of_multiplexado 0195                _setup_int 022C  
             ?_setup_int 0070             separar@valor 002D                 __ptext10 00EB  
               _contador 0030                 _selector 0079               _INTCONbits 000B  
               intlevel1 0000         ??_codificar_7seg 0070               _OSCCONbits 008F  
            ??_setup_int 0020             _multiplexado 014C      codificar_7seg@valor 0072  
